«IMPORT similuml»
«IMPORT template»
«EXTENSION template::GeneratorExtensions»

«REM»
Creación de vistas de la aplicación Django
Archivo generado: views.py
«ENDREM»

«REM»Creación del archivo de vistas«ENDREM»
«DEFINE main FOR DiagramaClases»
    «FILE 'views.py'-»
from django.shortcuts import render_to_response, get_object_or_404
from django.http import HttpResponse, HttpResponseRedirect
from django.core import serializers
from django.core.urlresolvers import reverse_lazy
from django.template import RequestContext
from django.views.generic import DetailView, CreateView, UpdateView
from django.contrib.auth.decorators import login_required

import json

from .models import «EXPAND django_global::nombre FOREACH clases_del_Diagrama SEPARATOR ', '»
from .forms import «EXPAND formularioClase FOREACH clases_del_Diagrama SEPARATOR ', '»
«EXPAND importacionFormset FOREACH clases_del_Diagrama»

# Índice
@login_required(login_url='/accounts/login')
def index(request):
    return render_to_response('backend/index.html',
                              context_instance=RequestContext(request),
                              )
                              
«EXPAND vistasModulo FOREACH this.modulos_del_diagrama-»

«EXPAND vistasClase FOREACH clases_del_Diagrama-»
    «ENDFILE»
«ENDDEFINE»

«DEFINE vistasModulo FOR Modulo»
# Índice «this.nombre_url.toFirstUpper()»
@login_required(login_url='/accounts/login')
def index_modulo_«this.nombre_url.toLowerCase()»(request):
    return render_to_response('module/index_«this.nombre_url.toLowerCase()».html',
                              context_instance=RequestContext(request),
                              )
«ENDDEFINE»


«REM»Listado de vistas por clase«ENDREM»
«DEFINE vistasClase FOR Clase»
# Clase: «EXPAND django_global::nombre FOR this»
## Vistas genéricas
«IF this.agregar-»
«EXPAND vistaCrear FOR this»
«ENDIF-»
«IF this.editar-»
«EXPAND vistaEditar FOR this»
«ENDIF-»
«IF this.eliminar-»
«EXPAND vistaEliminar FOR this»
«ENDIF-»
«IF this.ver-»
«EXPAND vistaDetallar FOR this»
«ENDIF-»
«IF this.listar-»
«EXPAND vistaListar FOR this»
«ENDIF-»
## Vistas JSON
«EXPAND vistaDetallarJson FOR this»
«EXPAND vistaListarJson FOR this»
«ENDDEFINE»


«REM»Vista Crear de la clase«ENDREM»
«DEFINE vistaCrear FOR Clase»
class «EXPAND django_global::nombreMinus FOR this»_crear(CreateView):
    model = «EXPAND django_global::nombre FOR this»
    form_class = «EXPAND django_global::nombreMinus FOR this»_form
    template_name_suffix = '_form'
    «IF this.listar-»
    success_url = reverse_lazy('gen:«EXPAND django_global::nombreMinus FOR this»_listar')
    «ELSE-»
    success_url = reverse_lazy('gen:«EXPAND django_global::nombreMinus FOR this»_detallar')
    «ENDIF-»
    
    «IF this.asociaciones_contenidas.exists(e|e.esComposicion)-»
    «EXPAND administracionFormsetCrear FOR this-»
    
    «EXPAND formularioValido FOR this-»
    «ENDIF»    
«ENDDEFINE»


«REM»Vista Editar de la clase«ENDREM»
«DEFINE vistaEditar FOR Clase»
class «EXPAND django_global::nombreMinus FOR this»_editar(UpdateView):
    model = «EXPAND django_global::nombre FOR this»
    form_class = «EXPAND django_global::nombreMinus FOR this»_form
    template_name_suffix = '_form'
    «IF this.listar-»
    success_url = reverse_lazy('gen:«EXPAND django_global::nombreMinus FOR this»_listar')
    «ELSE-»
    success_url = reverse_lazy('gen:«EXPAND django_global::nombreMinus FOR this»_detallar')
    «ENDIF-»
    
    «IF this.asociaciones_contenidas.exists(e|e.esComposicion)-»
    «EXPAND administracionFormsetEditar FOR this-»
    
    «EXPAND formularioValido FOR this-»
    «ENDIF» 
«ENDDEFINE»


«REM»Vista Eliminar de la clase«ENDREM»
«DEFINE vistaEliminar FOR Clase»
@login_required(login_url='/accounts/login')
def «EXPAND django_global::nombreMinus FOR this»_eliminar(request, pk):
    instancia = «EXPAND django_global::nombre FOR this».objects.get(pk=pk)
    instancia.delete()
    return HttpResponseRedirect(reverse_lazy('gen:«EXPAND django_global::nombreMinus FOR this»_listar'))
«ENDDEFINE»


«REM»Vista Detallar de la clase«ENDREM»
«DEFINE vistaDetallar FOR Clase»
«IF this.listar-»
class «EXPAND django_global::nombreMinus FOR this»_detallar(DetailView):
    model = «EXPAND django_global::nombre FOR this»
    template_name_suffix = '_detallar'
«ELSE-»
@login_required(login_url='/accounts/login')
def «EXPAND django_global::nombreMinus FOR this»_detallar(request):
    model = «this.nombre_url.toFirstUpper()».objects.filter().first()  
    return render_to_response('backend/«this.nombre_url.toLowerCase()»_detallar.html',
                              {'object':model},
                              context_instance=RequestContext(request),
                              )
«ENDIF-»
«ENDDEFINE»


«REM»Vista Listar de la clase«ENDREM»
«DEFINE vistaListar FOR Clase»
@login_required(login_url='/accounts/login')
def «EXPAND django_global::nombreMinus FOR this»_listar(request):
    return render_to_response('backend/«EXPAND django_global::nombreMinus FOR this»_listar.html',
                              context_instance=RequestContext(request),
                              )
«ENDDEFINE»


«REM»Vista Detallar de la clase, en JSON«ENDREM»
«DEFINE vistaDetallarJson FOR Clase»
@login_required(login_url='/accounts/login')
def «EXPAND django_global::nombreMinus FOR this»_detallar_json(request, pk):
    object = get_object_or_404(«EXPAND django_global::nombre FOR this», pk=pk)
    data = serializers.serialize('json', [object])
    return HttpResponse(data, content_type='application/json; charset=utf-8')
«ENDDEFINE»


«REM»Vista Listar de la clase, en JSON«ENDREM»
«DEFINE vistaListarJson FOR Clase»
@login_required(login_url='/accounts/login')
def «EXPAND django_global::nombreMinus FOR this»_listar_json(request):
    data = serializers.serialize('json', «EXPAND django_global::nombre FOR this».objects.all())
    return HttpResponse(data, content_type='application/json; charset=utf-8')
«ENDDEFINE»


«REM»Importación de formulario de la clase«ENDREM»
«DEFINE formularioClase FOR Clase-»
«EXPAND django_global::nombreMinus FOR this»_form«ENDDEFINE»


«REM»Importación de formsets de la clase«ENDREM»
«DEFINE importacionFormset FOR Clase-»
«IF this.asociaciones_contenidas.exists(e|e.esComposicion)-»
from .forms import «EXPAND django_global::nombreFormset FOREACH this.asociaciones_contenidas»
«ENDIF-»
«ENDDEFINE-»


«REM»Administración de formsets en el formulario de creación de la clase«ENDREM»
«DEFINE administracionFormsetCrear FOR Clase»
«IF this.asociaciones_contenidas.exists(e|e.esComposicion)-»
    def get_context_data(self, **kwargs):
        context = super(«EXPAND django_global::nombreMinus FOR this»_crear, self).get_context_data(**kwargs)
        if self.request.POST:
            «EXPAND contextoFormsetPost FOREACH this.asociaciones_contenidas»
        else:
            «EXPAND contextoFormsetGetCrear FOREACH this.asociaciones_contenidas»
        return context
«ENDIF-»        
«ENDDEFINE»


«REM»Administración de formsets en el formulario de edición de la clase«ENDREM»
«DEFINE administracionFormsetEditar FOR Clase»
«IF this.asociaciones_contenidas.exists(e|e.esComposicion)-»
    def get_context_data(self, **kwargs):
        context = super(«EXPAND django_global::nombreMinus FOR this»_editar, self).get_context_data(**kwargs)
        if self.request.POST:
            «EXPAND contextoFormsetPost FOREACH this.asociaciones_contenidas»
        else:
            «EXPAND contextoFormsetGetEditar FOREACH this.asociaciones_contenidas»
        return context
«ENDIF-»
«ENDDEFINE»


«REM»Generación de formsets en contexto para solicitud POST«ENDREM»
«DEFINE contextoFormsetPost FOR Relacion-»
«IF this.esComposicion-»
            context['«EXPAND django_global::nombreFormset FOR this-»'] = «EXPAND django_global::nombreFormset FOR this-»(self.request.POST)
«ENDIF-»
«ENDDEFINE-»


«REM»Generación de formsets en contexto de formulario de creación, para solicitud GET«ENDREM»
«DEFINE contextoFormsetGetCrear FOR Relacion-»
«IF this.esComposicion-»
                context['«EXPAND django_global::nombreFormset FOR this-»'] = «EXPAND django_global::nombreFormset FOR this-»(
                  queryset=«EXPAND django_global::nombre FOR this.destino-».objects.none())
«ENDIF-»             
«ENDDEFINE-»


«REM»Generación de formsets en contexto de formulario de edición, para solicitud GET«ENDREM»
«DEFINE contextoFormsetGetEditar FOR Relacion-»
«IF this.esComposicion-»
            if (self.object.«this.nombre_url.toFirstLower()»):
                context['«EXPAND django_global::nombreFormset FOR this»'] = «EXPAND django_global::nombreFormset FOR this»(
                  queryset=«EXPAND django_global::nombre FOR this.destino».objects.filter(pk=self.object.«this.nombre.toFirstLower()».pk))
            else:
                context['«EXPAND django_global::nombreFormset FOR this»'] = «EXPAND django_global::nombreFormset FOR this»(
                  queryset=«EXPAND django_global::nombre FOR this.destino».objects.none())
«ENDIF-»
«ENDDEFINE-»


«REM»Persistencia de datos introducidos en formulario con formsets válidos«ENDREM»
«DEFINE formularioValido FOR Clase-»
    def form_valid(self, form):
        context = self.get_context_data()
        «EXPAND formsetContexto FOREACH this.asociaciones_contenidas.select(e|e.esComposicion)»
        if «EXPAND formsetValido FOREACH this.asociaciones_contenidas.select(e|e.esComposicion) SEPARATOR ' and '»:
            self.object = form.save()
            «EXPAND formsetInstancia FOREACH this.asociaciones_contenidas.select(e|e.esComposicion)»
            «EXPAND formsetGuardado FOREACH this.asociaciones_contenidas.select(e|e.esComposicion)»
            «EXPAND formsetAsociacion FOREACH this.asociaciones_contenidas.select(e|e.esComposicion)»
            self.object.save()
            «IF this.listar-»
            return HttpResponseRedirect(reverse_lazy('gen:«EXPAND django_global::nombreMinus FOR this»_listar'))
		    «ELSE-»
            return HttpResponseRedirect(reverse_lazy('gen:«EXPAND django_global::nombreMinus FOR this»_detallar'))
		    «ENDIF-»
        else:
            return self.render_to_response(self.get_context_data(form=form))
«ENDDEFINE»


«REM»Obtención de formset desde el contexto de la solicitud«ENDREM»
«DEFINE formsetContexto FOR Relacion-»
        «this.nombre_url.toFirstLower()»_form = context['«EXPAND django_global::nombreFormset FOR this»']
«ENDDEFINE-»


«REM»Validación del formset«ENDREM»
«DEFINE formsetValido FOR Relacion-»
«this.nombre_url.toFirstLower()»_form.is_valid()«ENDDEFINE»


«REM»Instanciación del objeto relacionado al formset«ENDREM»
«DEFINE formsetInstancia FOR Relacion-»
            «this.nombre_url.toFirstLower()»_form.instance = self.object
«ENDDEFINE-»


«REM»Persistencia de la información del formset«ENDREM»
«DEFINE formsetGuardado FOR Relacion-»
			«IF this.cardinalidadSuperior > 1 || this.cardinalidadSuperior < 0»
            «this.nombre_url.toFirstLower()»_list = «this.nombre_url.toFirstLower()»_form.save()
            «ELSE»
            «this.nombre_url.toFirstLower()»_list = «this.nombre_url.toFirstLower()»_form.save()
            «ENDIF»
«ENDDEFINE-»


«REM»Creación de la asociación entre clase del formset y clase del formulario«ENDREM»
«DEFINE formsetAsociacion FOR Relacion-»
            if («this.nombre_url.toFirstLower()»_list):
                self.object.«this.nombre_url.toFirstLower()» = «this.nombre_url.toFirstLower()»_list.pop()
«ENDDEFINE-»
